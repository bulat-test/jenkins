
def function() {
        def host_arch = sh (script: 'uname -m', returnStdout: true).trim()
        def docker_hub_project = ("dgls/footcourtproxy-" + host_arch)
    stage ('init-'+host_arch){
        deleteDir()  
        echo "Сборщик: ${env.NODE_NAME}"
        echo "Директория: ${env.WORKSPACE}"
        echo "Версия Docker"
        sh "docker -v"
        echo ("Собираемый контейнер: "+docker_hub_project +":"+VERSION)
       
        echo "Удаляем старые docker images"
        try {
            sh "docker rmi -f  \$(docker images $docker_hub_project -q) || true"
        } catch ( e ) {
         echo  "can not remove some images"
        }
        checkout scm
    }
    stage ('build-'+host_arch){
        sh "./docker/build.sh"
    }
    
    stage ('push-'+host_arch){
        sh "docker tag $docker_hub_project:$VERSION $docker_hub_project:latest"
        sh "docker images"


        withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: 'jenkins_docker_hub_credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD']]) { 
        sh "echo $USERNAME"
        sh "echo $PASSWORD"
        //docker login
        }
        // docker push


    }
    
}

  
parallel (
    "stream x86_64" : {
        node('x86_64') {
            function()
        }
    },

    "stream armv7l" : { 
        node('arm') {
            function()
        }
    }
)

